/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 packages/arena/public/models/BoxerRobot.gltf -t -r public
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    mesh: THREE.SkinnedMesh
    mixamorigHips: THREE.Bone
  }
  materials: {}
}

type ActionName = 'Hit' | 'Idle' | 'Jumping' | 'Kicking' | 'Punching' | 'Running'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/../packages/arena/public/models/BoxerRobot.gltf') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="mesh" geometry={nodes.mesh.geometry} material={nodes.mesh.material} skeleton={nodes.mesh.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/../packages/arena/public/models/BoxerRobot.gltf')
